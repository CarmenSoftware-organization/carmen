version: '3.8'

services:
  # Keycloak Server
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: carmen-keycloak
    environment:
      # Database configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      
      # Keycloak admin user
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin_password
      
      # Development mode settings
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
      
      # Log level
      KC_LOG_LEVEL: INFO
    ports:
      - "8080:8080"
    command: 
      - start-dev
      - --import-realm
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
      - ./keycloak/themes:/opt/keycloak/themes:ro
      - keycloak_data:/opt/keycloak/data
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health/ready || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped
    networks:
      - keycloak-network

  # PostgreSQL database for Keycloak
  keycloak-postgres:
    image: postgres:15-alpine
    container_name: carmen-keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
      - ./keycloak/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - keycloak-network

  # Redis for session storage (optional but recommended for production)
  redis:
    image: redis:7-alpine
    container_name: carmen-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass redis_password
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - keycloak-network

  # MailHog for email testing (SMTP server)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: carmen-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web interface
    restart: unless-stopped
    networks:
      - keycloak-network

volumes:
  keycloak_data:
    name: carmen_keycloak_data
  keycloak_postgres_data:
    name: carmen_keycloak_postgres_data
  redis_data:
    name: carmen_redis_data

networks:
  keycloak-network:
    name: carmen_keycloak_network
    driver: bridge